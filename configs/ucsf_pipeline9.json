[
    {
        "title": "days safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/days_safe.txt",
        "notes": "This should remove anything with pattern XX days"
    },
    {
        "title": "male safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/male_safe.txt",
        "notes": "This should remove anything with pattern year old male"
    },
    {
        "title": "bp safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/bp_safe.txt",
        "notes": "This should remove anything with pattern bp"
    },
    {
        "title": "units safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/units_safe.txt",
        "notes": "This should remove anything with pattern unit"
    },
    {
        "title": "tablet safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/tablet_safe.txt",
        "notes": "This should remove anything with pattern tablet"
    },
    {
        "title": "pain safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/pain_safe.txt",
        "notes": "This should remove anything with pattern pain"
    },
    {
        "title": "able to safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/able_to_safe.txt",
        "notes": "This should remove anything with pattern able to"
    },
    {
        "title": "active safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/active_safe.txt",
        "notes": "This should remove anything with pattern active"
    },
    {
        "title": "age safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/age_safe.txt",
        "notes": "This should remove anything with pattern age < 90"
    },
    {
        "title": "alert safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/alert_safe.txt",
        "notes": "This should remove anything with pattern alert"
    },
    {
        "title": "AM safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/AM_safe.txt",
        "notes": "This should remove anything with pattern AM"
    },
    {
        "title": "arms safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/arms_safe.txt",
        "notes": "This should remove anything with pattern arms"
    },
    {
        "title": "baby safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/baby_safe.txt",
        "notes": "This should remove anything with pattern baby"
    },
    {
        "title": "back safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/back_safe.txt",
        "notes": "This should remove anything with pattern back"
    },
    {
        "title": "base safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/base_safe.txt",
        "notes": "This should remove anything with pattern base"
    },
    {
        "title": "be safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/be_safe.txt",
        "notes": "This should remove anything with pattern be xx"
    },
    {
        "title": "beats safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/beats_safe.txt",
        "notes": "This should remove anything with pattern beats"
    },
    {
        "title": "below safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/below_safe.txt",
        "notes": "This should remove anything with pattern below"
    },
    {
        "title": "bile safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/bile_safe.txt",
        "notes": "This should remove anything with pattern bile duct"
    },
    {
        "title": "birth safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/birth_safe.txt",
        "notes": "This should remove anything with pattern birth"
    },
    {
        "title": "call safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/call_safe.txt",
        "notes": "This should remove anything with pattern call"
    },
    {
        "title": "case safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/case_safe.txt",
        "notes": "This should remove anything with pattern case"
    },
    {
        "title": "cava safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/cava_safe.txt",
        "notes": "This should remove anything with pattern vena cava"
    },
    {
        "title": "chief safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/chief_safe.txt",
        "notes": "This should remove anything with pattern chief complaint"
    },
    {
        "title": "child safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/child_safe.txt",
        "notes": "This should remove anything with pattern your child"
    },
    {
        "title": "code safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/code_safe.txt",
        "notes": "This should remove anything with pattern code"
    },
    {
        "title": "cord safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/cord_safe.txt",
        "notes": "This should remove anything with pattern cord"
    },
    {
        "title": "crohn's diseases safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/crohns_disease_safe.txt",
        "notes": "This should remove anything with pattern crohn's disease"
    },
    {
        "title": "day safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/day_safe.txt",
        "notes": "This should remove anything with pattern day"
    },
    {
        "title": "dial safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/dial_safe.txt",
        "notes": "This should remove anything with pattern dial"
    },
    {
        "title": "distance safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/distance_safe.txt",
        "notes": "This should remove anything with pattern distance"
    },
    {
        "title": "do safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/do_safe.txt",
        "notes": "This should remove anything with pattern do not"
    },
    {
        "title": "doesn't safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/doesnt_safe.txt",
        "notes": "This should remove anything with pattern doesn't"
    },
    {
        "title": "doppler safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/doppler_safe.txt",
        "notes": "This should remove anything with pattern doppler flow, etc"
    },
    {
        "title": "down syndrome safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/down_syndrome_safe.txt",
        "notes": "This should remove anything with pattern down's syndrome"
    },
    {
        "title": "drop safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/drop_safe.txt",
        "notes": "This should remove anything with pattern x drop"
    },
    {
        "title": "due safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/due_safe.txt",
        "notes": "This should remove anything with pattern due to"
    },
    {
        "title": "ED safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/ED_safe.txt",
        "notes": "This should remove anything with pattern ED"
    },
    {
        "title": "edge safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/edge_safe.txt",
        "notes": "This should remove anything with pattern edge"
    },
    {
        "title": "fall safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/fall_safe.txt",
        "notes": "This should remove anything with pattern fall risk"
    },
    {
        "title": "fax safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/fax_safe.txt",
        "notes": "This should remove anything with pattern fax:"
    },
    {
        "title": "few safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/few_safe.txt",
        "notes": "This should remove anything with pattern few"
    },
    {
        "title": "fiber safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/fiber_safe.txt",
        "notes": "This should remove anything with pattern fiber"
    },
    {
        "title": "file safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/file_safe.txt",
        "notes": "This should remove anything with pattern on file"
    },
    {
        "title": "floor safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/floor_safe.txt",
        "notes": "This should remove anything with pattern on the floor"
    },
    {
        "title": "found safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/found_safe.txt",
        "notes": "This should remove anything with pattern found"
    },
    {
        "title": "GI safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/GI_safe.txt",
        "notes": "This should remove anything with pattern GI"
    },
    {
        "title": "go safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/go_safe.txt",
        "notes": "This should remove anything with pattern go"
    },
    {
        "title": "grade safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/grade_safe.txt",
        "notes": "This should remove anything with pattern grade"
    },
    {
        "title": "grams safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/grams_safe.txt",
        "notes": "This should remove anything with pattern grams"
    },
    {
        "title": "hearing safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/hearing_safe.txt",
        "notes": "This should remove anything with pattern hearing loss/aid"
    },
    {
        "title": "HENT safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/HENT_safe.txt",
        "notes": "This should remove anything with pattern HENT:"
    },
    {
        "title": "hour safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/hour_safe.txt",
        "notes": "This should remove anything with pattern hour"
    },
    {
        "title": "how safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/how_safe.txt",
        "notes": "This should remove anything with pattern how"
    },
    {
        "title": "key safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/key_safe.txt",
        "notes": "This should remove anything with pattern key part"
    },
    {
        "title": "lb safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/lb_safe.txt",
        "notes": "This should remove anything with pattern x lb"
    },
    {
        "title": "learn safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/learn_safe.txt",
        "notes": "This should remove anything with pattern learn"
    },
    {
        "title": "loop safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/loop_safe.txt",
        "notes": "This should remove anything with pattern flow-volume loop"
    },
    {
        "title": "max safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/max_safe.txt",
        "notes": "This should remove anything with pattern max x"
    },
    {
        "title": "morning safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/morning_safe.txt",
        "notes": "This should remove anything with pattern morning"
    },
    {
        "title": "MyChart safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/MyChart_safe.txt",
        "notes": "This should remove anything with pattern MyChart"
    },
    {
        "title": "na safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/na_safe.txt",
        "notes": "This should remove anything with pattern na x"
    },
    {
        "title": "night safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/night_safe.txt",
        "notes": "This should remove anything with pattern night"
    },
    {
        "title": "non safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/non_safe.txt",
        "notes": "This should remove anything with pattern non-x"
    },
    {
        "title": "not safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/not_safe.txt",
        "notes": "This should remove anything with pattern not"
    },
    {
        "title": "page safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/page_safe.txt",
        "notes": "This should remove anything with pattern page x"
    },
    {
        "title": "pap safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/pap_safe.txt",
        "notes": "This should remove anything with pattern pap x"
    },
    {
        "title": "pounds safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/pounds_safe.txt",
        "notes": "This should remove anything with pattern x pounds"
    },
    {
        "title": "re safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/re_safe.txt",
        "notes": "This should remove anything with pattern re"
    },
    {
        "title": "ROS safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/ROS_safe.txt",
        "notes": "This should remove anything with pattern ROS:"
    },
    {
        "title": "scope safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/scope_safe.txt",
        "notes": "This should remove anything with pattern the scope"
    },
    {
        "title": "UTI safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/UTI_safe.txt",
        "notes": "This should remove anything with pattern UTI"
    },
    {
        "title": "sci notation safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/sci_notation_safe.txt",
        "notes": "This should remove anything with pattern in scientific notation"
    },
    {
        "title": "young safe",
        "type": "regex",
        "exclude": false,
        "filepath": "filters/regex/safe/young_safe.txt",
        "notes": "This should remove anything with pattern young adult"
    },
    {
        "title": "YYYY/MM-YYYY/MM",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/YYYY_MM-YYYY_MM_transformed.txt",
        "notes": "This should remove anything with pattern YYYY/MM-YYYY/MM"
    },
    {
        "title": "MM/DD/YY-MM/DD/YY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_DD_YY-MM_DD_YY_transformed.txt",
        "notes": "This should remove anything with pattern MM/DD/YY-MM/DD/YY"
    },
    {
        "title": "MM/YYYY-MM/YYYY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YYYY-MM_YYYY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YYYY-MM/YYYY"
    },
    {
        "title": "MM/YY-MM/YY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YY-MM_YY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YY-MM/YY"
    },
    {
        "title": "MM/YYYY-MM/YYYY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YYYY-MM_YYYY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YYYY-MM/YYYY"
    },
    {
        "title": "MM/DD-MM/DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_DD-MM_DD_transformed.txt",
        "notes": "This should remove anything with pattern MM/DD-MM/DD"
    },
    {
        "title": "DD/MM-DD/MM",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/DD_MM-DD_MM_transformed.txt",
        "notes": "This should remove anything with pattern DD/MM-DD/MM"
    },
    {
        "title": "day_name_dd_month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name_yy"
    },
    {
        "title": "day_name_month_name_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_yy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd_yy"
    },
    {
        "title": "day_name_month_name_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd_yyyy"
    },
    {
        "title": "day_name_dd_month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name_yyyy"
    },
    {
        "title": "day_name_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd"
    },
    {
        "title": "day_name_dd_month_name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name"
    },
    {
        "title": "dd_month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern dd_month_name_yy"
    },
    {
        "title": "dd_month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern dd_month_name_yyyy"
    },
    {
        "title": "month_name_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd_yy"
    },
    {
        "title": "month_name_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd_yyyy"
    },
    {
        "title": "yy_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yy_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern yy_month_name_dd"
    },
    {
        "title": "yyyy_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yyyy_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern yyyy_month_name_dd"
    },
    {
        "title": "month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd"
    },
    {
        "title": "dd_mm_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm_yy.txt",
        "notes": "This should remove anything with pattern dd_mm_yy"
    },
    {
        "title": "dd_mm_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm_yyyy.txt",
        "notes": "This should remove anything with pattern dd_mm_yyyy"
    },
    {
        "title": "yy_mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yy_mm_dd.txt",
        "notes": "This should remove anything with pattern yy_mm_dd"
    },
    {
        "title": "mm_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd_yy.txt",
        "notes": "This should remove anything with pattern mm_dd_yy"
    },
    {
        "title": "yyyy_mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yyyy_mm_dd.txt",
        "notes": "This should remove anything with pattern yyyy_mm_dd"
    },
    {
        "title": "mm_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd_yyyy.txt",
        "notes": "This should remove anything with pattern mm_dd_yyyy"
    },
    {
        "title": "dd_mm",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm.txt",
        "notes": "This should remove anything with pattern dd_mm"
    },
    {
        "title": "mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd.txt",
        "notes": "This should remove anything with pattern mm_dd"
    },
    {
        "title": "mm_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_yyyy.txt",
        "notes": "This should remove anything with pattern mm_yyyy"
    },
    {
        "title": "mm_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_yy.txt",
        "notes": "This should remove anything with pattern mm_yy"
    },
    {
        "title": "month_name_of_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_of_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_of_yy"
    },
    {
        "title": "month_name_of_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_of_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_of_yyyy"
    },
    {
        "title": "month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_yy"
    },
    {
        "title": "month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_yyyy"
    },
    {
        "title": "day_numbering_of_month",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_numbering_of_month_transformed.txt",
        "notes": "This should remove anything with pattern day_numbering_of_month"
    },
    {
        "title": "month_name_xst_xnd_xth",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_xst_xnd_xth_transformed.txt",
        "notes": "This should remove anything with pattern month_name_xst_xnd_xth"
    },
    {
        "title": "on_or_by_the_day_numbering",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/on_or_by_the_day_numbering_transformed.txt",
        "notes": "This should remove anything with pattern on_or_by_the_day_numbering"
    },
    {
        "title": "as of date",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/as_of_date.txt",
        "notes": "This should remove anything with pattern as of d/d"
    },
    {
        "title": "month_name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_transformed.txt",
        "notes": "This should remove anything with pattern month_name"
    },
    {
        "title": "lot #",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/lot_#.txt",
        "notes": "This should remove anything with pattern lot #"
    },
    {
        "title": "id verbose",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/id_verbose.txt",
        "notes": "This should remove anything with pattern ID: XXXXX"
    },
    {
        "title": "activation code",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/activation_code.txt",
        "notes": "This should remove anything with pattern activation code: XXXXX-XXXX-XXXXX"
    },
    {
        "title": "model number",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/model_number.txt",
        "notes": "This should remove anything with pattern model number"
    },
    {
        "title": "six or more digits",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDDDDD+.txt",
        "notes": "This should remove anything that matches any number with 6 or more digits (15 limit is arbitrary)"
    },
    {
        "title": "order number",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/order_number.txt",
        "notes": "This should remove anything that matches order number ..."
    },
    {
        "title": "specimen number",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/specimen_#.txt",
        "notes": "This should remove anything that matches specimen number ..."
    },
    {
        "title": "cassette_#",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/cassette_#.txt",
        "notes": "This should remove anything that matches cassette_# ..."
    },
    {
        "title": "# reviewed by",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/#_reviewed_by.txt",
        "notes": "This should remove anything that matches # reviewed by ..."
    },
    {
        "title": "account #",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/account_#.txt",
        "notes": "This should remove anything that matches account #"
    },
    {
        "title": "CCDDDD-D-CC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/CCDDDD-D-CC.txt",
        "notes": "This should remove anything that matches CCDDDD-D-CC"
    },
    {
        "title": "DDCCCDDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDCCCDDD.txt",
        "notes": "This should remove anything that matches DDCCCDDD"
    },
    {
        "title": "CCDDD_DDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/CCDDD_DDD.txt",
        "notes": "This should remove anything that matches NNDDD(anything)DDDD"
    },
    {
        "title": "CDD_DDDD+",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/CDD_DDDD+.txt",
        "notes": "This should remove anything that matches NCDD_DDDD+"
    },
    {
        "title": "mixed 2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed002.txt",
        "notes": "This should remove anything that matches NND"
    },
    {
        "title": "mixed 3",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed003.txt",
        "notes": "This should remove anything that matches DDDDNNN"
    },
    {
        "title": "mixed 4",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed004.txt",
        "notes": "This should remove anything that matches DDDN+"
    },
    {
        "title": "mixed 5",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed005.txt",
        "notes": "This should remove anything that matches CDC"
    },
    {
        "title": "mixed 6",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed006.txt",
        "notes": "This should remove anything that matches CDDDC"
    },
    {
        "title": "mixed 7",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed007.txt",
        "notes": "This should remove anything that matches a weird string of numbers/letters connected by colons etc"
    },
    {
        "title": "mixed 8",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed008.txt",
        "notes": "This should remove anything that matches a (longer) weird string of numbers/letters connected by colons etc"
    },
    {
        "title": "mixed 10",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed_010_transformed.txt",
        "notes": "This should remove anything with weird number/letter mashups"
    },
    {
        "title": "CCCDDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/CCCDDD.txt",
        "notes": "This should remove anything that matches CCCDDD"
    },
    {
        "title": "DDDDCDDDDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDDDCDDDDD.txt",
        "notes": "This should remove anything that matches DDDDCDDDDD"
    },
    {
        "title": "DDD-DD-DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDD-DD-DD.txt",
        "notes": "This should remove anything that matches any number with pattern DDD-DD-DD"
    },
    {
        "title": "DD-DD-DD-DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DD-DD-DD-DD.txt",
        "notes": "This should remove anything that matches any numbers separated by 3 dashes"
    },
    {
        "title": "DD-DDDDDC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DD-DDDDDC.txt",
        "notes": "This should remove anything that matches any number with DD-DDDDDC"
    },
    {
        "title": "****DC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/blocked_DC.txt",
        "notes": "This should remove anything that matches any blocked MRN number with last digits"
    },
    {
        "title": "model and serial numbers",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/model_and_serial.txt",
        "notes": "This should remove anything that matches a model or serial number pattern"
    },
    {
        "title": "ssn only",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/ssn.txt",
        "notes": "This should remove anything that matches XXX-XX-XXXX"
    },
    {
        "title": "url",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/url.txt",
        "notes": "This should remove anything that looks like a url"
    },
    {
        "title": "call #",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/call_#.txt",
        "notes": "This should remove anything that matches call #: etc."
    },
    {
        "title": "emails",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/email.txt",
        "notes": "This should remove anything that looks like an email"
    },
    {
        "title": "xxx_xxx_xxxx",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/xxx_xxx_xxxx.txt",
        "notes": "This should remove anything that xxx.xxx.xxxx"
    },
    {
        "title": "xxx_xxx_CCCC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/xxx_xxx_CCCC.txt",
        "notes": "This should remove anything that xxx.xxx.CCCC+"
    },
    {
        "title": "5 digit pager",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/pager.txt",
        "notes": "This should remove anything that matches a pager number"
    },
    {
        "title": "full street address",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/full_street_address_transformed.txt",
        "notes": "This should remove anything that looks like a full street address (numbers and words)"
    },
    {
        "title": "number streetname extension?",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/num_streetname_extension?_transformed.txt",
        "notes": "This should remove anything that looks like a street address (with a possible extension)"
    },
    {
        "title": "city state zip",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_state_zip_transformed.txt",
        "notes": "This should remove anything that looks like a partial street address (city, state, zip"
    },
    {
        "title": "city zip",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_zip.txt",
        "notes": "This should remove anything that has a city name, followed by a zip code"
    },
    {
        "title": "lives in",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/lives_in.txt",
        "notes": "This should remove anything that matches pattern lives in/on"
    },
    {
        "title": "city state",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_state_transformed.txt",
        "notes": "This should remove anything that has a city name, followed by a state name/abbrev"
    },
    {
        "title": "city",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city.txt",
        "notes": "This should remove anything that matches pattern [name] [city]"
    },
    {
        "title": "hospital name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_hospital.txt",
        "notes": "This should remove anything the resembles a hospital name"
    },
    {
        "title": "hospitalized at",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/hospitalized_at_15chars.txt",
        "notes": "This should remove anything with 'hospitalized at' followed by a proper noun"
    },
    {
        "title": "admission from",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admission_from_14chars.txt",
        "notes": "This should remove anything with 'admission from' followed by a proper noun"
    },
    {
        "title": "admitted from",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_from_hospital_13chars.txt",
        "notes": "This should remove anything with 'admitted from' followed by a proper noun"
    },
    {
        "title": "admission to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admission_to_hospital_12chars.txt",
        "notes": "This should remove anything with 'admission to' followed by a proper noun"
    },
    {
        "title": "admitted to 1",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_to_hospital_11chars.txt",
        "notes": "This should remove anything with 'admitted to' followed by a proper noun"
    },
    {
        "title": "brought to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/brought_to_hospital_10chars.txt",
        "notes": "This should remove anything with 'brought to' followed by a proper noun"
    },
    {
        "title": "taken to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/taken_to_hospital_8chars.txt",
        "notes": "This should remove anything with 'taken to' followed by a proper noun"
    },
    {
        "title": "admitted to 2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_to_hospital_7chars.txt",
        "notes": "This should remove anything with 'admitted to' followed by a proper noun"
    },
    {
        "title": "box room",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/box_room.txt",
        "notes": "This should remove anything that has pattern box # followed by room #"
    },
    {
        "title": "room box",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/room_box.txt",
        "notes": "This should remove anything that has pattern room # followed by box #"
    },
    {
        "title": "lived to x",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/age/lived_to_x.txt",
        "note": ""
    },
    {
        "title": "x years old",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/age/x_years_old.txt",
        "note": ""
    },
    {
        "title": "x year old",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/age/x_year_old.txt",
        "note": ""
    },
    {
        "title": "age x",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/age/age_x.txt",
        "note": ""
    },
    {
        "title": "x yo",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/age/x_yo.txt",
        "note": ""
    },
    {
        "title": "u_#_patient",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/u_#_patient.txt",
        "note": ""
    },
    {
        "title": "salutations1",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_2chars.txt",
        "note": ""
    },
    {
        "title": "salutations2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_3chars.txt",
        "note": ""
    },
    {
        "title": "salutations3",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_4chars.txt",
        "note": ""
    },
    {
        "title": "salutations4",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_5chars.txt",
        "note": ""
    },
    {
        "title": "salutations5",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_2chars.txt",
        "note": ""
    },
    {
        "title": "salutations6",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_3chars.txt",
        "note": ""
    },
    {
        "title": "salutations7",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_4chars.txt",
        "note": ""
    },
    {
        "title": "names patterns",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/name_patterns.txt",
        "note": ""
    },
    {
        "title": "ordering md",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/ordering_md.txt",
        "note": ""
    },
    {
        "title": "name indicator",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/name_indicator.txt",
        "note": ""
    },
    {
        "title": "Names Blacklist",
        "type": "set",
        "exclude": true,
        "filepath": "/data/muenzenk/new_blacklists/ss_ucsf_names1.json",
        "pos": [
            "NNP",
            "NNS",
            "NN",
            "JJ"
        ],
        "notes": "These are words we believe are not safe"
    },
    {
        "title": "Address Blacklist",
        "type": "set",
        "exclude": true,
        "filepath": "filters/blacklists/updated_address_blacklist.json",
        "pos": [
            "NNP"
        ],
        "notes": ""
    },
    {
        "title": "Whitelist",
        "type": "set",
        "exclude": false,
        "filepath": "filters/whitelists/whitelist_061418.json",
        "pos": [],
        "notes": "These are words we beleive are safe"
    },
    {
        "title": "POS MATCHER",
        "type": "pos_matcher",
        "exclude": false,
        "pos": [
            "CD"
        ],
        "notes": "This will include any CDs that aren't included in earlier steps"
    }
]