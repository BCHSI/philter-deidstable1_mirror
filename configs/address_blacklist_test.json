[
	{
		"title":"full street address",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/full_street_address_transformed.txt",
		"notes":"This should remove anything that looks like a full street address (numbers and words)"
	},
	{
		"title":"city state zip",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_state_zip_transformed.txt",
		"notes":"This should remove anything that looks like a partial street address (city, state, zip"
	},

	{
		"title":"city zip",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_zip_transformed.txt",
		"notes":"This should remove anything that has a city name, followed by a zip code"
	},
	{
		"title":"number streetname extension?",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/num_streetname_extension?_transformed.txt",
		"notes":"This should remove anything that looks like a street address (with a possible extension)"
	},
	{
		"title":"lives in",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/lives_in_transformed.txt",
		"notes":"This should remove anything that matches pattern lives in/on"
	},

	{
		"title":"city state",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_state_transformed.txt",
		"notes":"This should remove anything that has a city name, followed by a state name/abbrev"
	},

	{
		"title":"hospital",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/hospital_transformed.txt",
		"notes":"This should remove anything that has a hospital name"
	},
	{
		"title":"city",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_transformed.txt",
		"notes":"This should remove anything that matches pattern [name] [city]"
	},
	{
		"title":"Address Blacklist",
		"type":"set",
		"exclude":true,
		"filepath":"filters/blacklists/address_blacklist_cities_counties.json",
		"pos":["NNP"],
		"notes":""
	},
	{
    	"title":"No catchall",
		"type":"regex",
		"exclude":false,
		"filepath":"filters/regex/catchall.txt",
		"notes":"This should match anything, preventing the catchall"
	}
]