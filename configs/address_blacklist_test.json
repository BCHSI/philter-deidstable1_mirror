[
	{
		"title":"full street address",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/full_street_address_transformed.txt",
		"notes":"This should remove anything that looks like a full street address (numbers and words)"
	},
	{
		"title":"city state zip",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_state_zip_transformed.txt",
		"notes":"This should remove anything that looks like a partial street address (city, state, zip"
	},

	{
		"title":"city zip",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_zip_transformed.txt",
		"notes":"This should remove anything that has a city name, followed by a zip code"
	},
	{
		"title":"number streetname extension?",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/num_streetname_extension?_transformed.txt",
		"notes":"This should remove anything that looks like a street address (with a possible extension)"
	},
	{
		"title":"lives in",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/lives_in_transformed.txt",
		"notes":"This should remove anything that matches pattern lives in/on"
	},
	{
		"title":"city state",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_state_transformed.txt",
		"notes":"This should remove anything that has a city name, followed by a state name/abbrev"
	},
	{
		"title":"city",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/addresses/city_transformed.txt",
		"notes":"This should remove anything that matches pattern [name] [city]"
	},
	{
		"title":"hospital name",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/nnp_hospital.txt",
		"notes":"This should remove anything the resembles a hospital name"
	},
	{
		"title":"hospitalized at",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/hospitalized_at_15chars.txt",
		"notes":"This should remove anything with 'hospitalized at' followed by a proper noun"
	},
	{
		"title":"admission from",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/admission_from_14chars.txt",
		"notes":"This should remove anything with 'admission from' followed by a proper noun"
	},
	{
		"title":"admitted from",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/admitted_from_hospital_13chars.txt",
		"notes":"This should remove anything with 'admitted from' followed by a proper noun"
	},
	{
		"title":"admission to",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/admission_to_hospital_12chars.txt",
		"notes":"This should remove anything with 'admission to' followed by a proper noun"
	},
	{
		"title":"admitted to 1",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/admitted_to_hospital_11chars.txt",
		"notes":"This should remove anything with 'admitted to' followed by a proper noun"
	},
	{
		"title":"brought to",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/brought_to_hospital_10chars.txt",
		"notes":"This should remove anything with 'brought to' followed by a proper noun"
	},
	{
		"title":"taken to",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/taken_to_hospital_8chars.txt",
		"notes":"This should remove anything with 'taken to' followed by a proper noun"
	},
	{
		"title":"admitted to 2",
		"type":"regex",
		"exclude":true,
		"filepath":"filters/regex/organizations/admitted_to_hospital_7chars.txt",
		"notes":"This should remove anything with 'admitted to' followed by a proper noun"
	},
	{
		"title":"Address Blacklist",
		"type":"set",
		"exclude":true,
		"filepath":"filters/blacklists/updated_address_blacklist.json",
		"pos":["NNP"],
		"notes":""
	},
	{
    	"title":"No catchall",
		"type":"regex",
		"exclude":false,
		"filepath":"filters/regex/catchall.txt",
		"notes":"This should match anything, preventing the catchall"
	}
]


