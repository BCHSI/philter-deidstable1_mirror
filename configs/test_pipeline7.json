[
    {
        "title": "YYYY/MM-YYYY/MM",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/YYYY_MM-YYYY_MM_transformed.txt",
        "notes": "This should remove anything with pattern YYYY/MM-YYYY/MM"
    },
    {
        "title": "MM/DD/YY-MM/DD/YY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_DD_YY-MM_DD_YY_transformed.txt",
        "notes": "This should remove anything with pattern MM/DD/YY-MM/DD/YY"
    },
    {
        "title": "MM/YYYY-MM/YYYY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YYYY-MM_YYYY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YYYY-MM/YYYY"
    },
    {
        "title": "MM/YY-MM/YY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YY-MM_YY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YY-MM/YY"
    },
    {
        "title": "MM/YYYY-MM/YYYY",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_YYYY-MM_YYYY_transformed.txt",
        "notes": "This should remove anything with pattern MM/YYYY-MM/YYYY"
    },
    {
        "title": "MM/DD-MM/DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/MM_DD-MM_DD_transformed.txt",
        "notes": "This should remove anything with pattern MM/DD-MM/DD"
    },
    {
        "title": "DD/MM-DD/MM",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/DD_MM-DD_MM_transformed.txt",
        "notes": "This should remove anything with pattern DD/MM-DD/MM"
    },
    {
        "title": "day_name_dd_month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name_yy"
    },
    {
        "title": "day_name_month_name_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_yy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd_yy"
    },
    {
        "title": "day_name_month_name_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd_yyyy"
    },
    {
        "title": "day_name_dd_month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name_yyyy"
    },
    {
        "title": "day_name_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern day_name_month_name_dd"
    },
    {
        "title": "day_name_dd_month_name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_dd_month_name_transformed.txt",
        "notes": "This should remove anything with pattern day_name_dd_month_name"
    },
    {
        "title": "dd_month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern dd_month_name_yy"
    },
    {
        "title": "dd_month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern dd_month_name_yyyy"
    },
    {
        "title": "month_name_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd_yy"
    },
    {
        "title": "month_name_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd_yyyy"
    },
    {
        "title": "yy_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yy_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern yy_month_name_dd"
    },
    {
        "title": "yyyy_month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yyyy_month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern yyyy_month_name_dd"
    },
    {
        "title": "month_name_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_dd_transformed.txt",
        "notes": "This should remove anything with pattern month_name_dd"
    },
    {
        "title": "dd_mm_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm_yy.txt",
        "notes": "This should remove anything with pattern dd_mm_yy"
    },
    {
        "title": "dd_mm_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm_yyyy.txt",
        "notes": "This should remove anything with pattern dd_mm_yyyy"
    },
    {
        "title": "yy_mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yy_mm_dd.txt",
        "notes": "This should remove anything with pattern yy_mm_dd"
    },
    {
        "title": "mm_dd_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd_yy.txt",
        "notes": "This should remove anything with pattern mm_dd_yy"
    },
    {
        "title": "yyyy_mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/yyyy_mm_dd.txt",
        "notes": "This should remove anything with pattern yyyy_mm_dd"
    },
    {
        "title": "mm_dd_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd_yyyy.txt",
        "notes": "This should remove anything with pattern mm_dd_yyyy"
    },
    {
        "title": "dd_mm",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/dd_mm.txt",
        "notes": "This should remove anything with pattern dd_mm"
    },
    {
        "title": "mm_dd",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_dd.txt",
        "notes": "This should remove anything with pattern mm_dd"
    },
    {
        "title": "mm_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_yyyy.txt",
        "notes": "This should remove anything with pattern mm_yyyy"
    },
    {
        "title": "mm_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/mm_yy.txt",
        "notes": "This should remove anything with pattern mm_yy"
    },
    {
        "title": "month_name_of_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_of_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_of_yy"
    },
    {
        "title": "month_name_of_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_of_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_of_yyyy"
    },
    {
        "title": "month_name_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_yy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_yy"
    },
    {
        "title": "month_name_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern month_name_yyyy"
    },
    {
        "title": "day_numbering_of_month",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_numbering_of_month_transformed.txt",
        "notes": "This should remove anything with pattern day_numbering_of_month"
    },
    {
        "title": "month_name_xst_xnd_xth",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_xst_xnd_xth_transformed.txt",
        "notes": "This should remove anything with pattern month_name_xst_xnd_xth"
    },
    {
        "title": "on_or_by_the_day_numbering",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/on_or_by_the_day_numbering_transformed.txt",
        "notes": "This should remove anything with pattern on_or_by_the_day_numbering"
    },
    {
        "title": "season_of_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/season_of_yy_transformed.txt",
        "notes": "This should remove anything with pattern season_of_yy"
    },
    {
        "title": "season_of_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/season_of_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern season_of_yyyy"
    },
    {
        "title": "day_name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/day_name_transformed.txt",
        "notes": "This should remove anything with pattern day_name"
    },
    {
        "title": "in_the_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/in_the_yy_transformed.txt",
        "notes": "This should remove anything with pattern 'in the (late/early) yy'"
    },
    {
        "title": "in_yy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/in_yy_transformed.txt",
        "notes": "This should remove anything with pattern in_yy"
    },
    {
        "title": "in_yyyy",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/in_yyyy_transformed.txt",
        "notes": "This should remove anything with pattern in_yyyy"
    },
    {
        "title": "month_name",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/dates/month_name_transformed.txt",
        "notes": "This should remove anything with pattern month_name"
    },
    {
        "title": "five or more digits",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDDDD+.txt",
        "notes": "This should remove anything that matches any number with 5 or more digits (15 limit is arbitrary)"
    },
    {
        "title": "mixed 1",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed001.txt",
        "notes": "This should remove anything that matches NNDDD(anything)DDDD"
    },
    {
        "title": "mixed 2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed002.txt",
        "notes": "This should remove anything that matches NND"
    },
    {
        "title": "mixed 3",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed003.txt",
        "notes": "This should remove anything that matches DDDDNNN"
    },
    {
        "title": "mixed 4",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed004.txt",
        "notes": "This should remove anything that matches DDDN+"
    },
    {
        "title": "mixed 5",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed005.txt",
        "notes": "This should remove anything that matches CDC"
    },
    {
        "title": "mixed 6",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed006.txt",
        "notes": "This should remove anything that matches CDDDC"
    },
    {
        "title": "mixed 7",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed007.txt",
        "notes": "This should remove anything that matches a weird string of numbers/letters connected by colons etc"
    },
    {
        "title": "mixed 8",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/mixed008.txt",
        "notes": "This should remove anything that matches a (longer) weird string of numbers/letters connected by colons etc"
    },
    {
        "title": "CCCDDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/CCCDDD.txt",
        "notes": "This should remove anything that matches CCCDDD"
    },
    {
        "title": "DDDDCDDDDD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDDDCDDDDD.txt",
        "notes": "This should remove anything that matches DDDDCDDDDD"
    },
    {
        "title": "DDD-DD-DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DDD-DD-DD.txt",
        "notes": "This should remove anything that matches any number with pattern DDD-DD-DD"
    },
    {
        "title": "DD-DD-DD-DD",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DD-DD-DD-DD.txt",
        "notes": "This should remove anything that matches any numbers separated by 3 dashes"
    },
    {
        "title": "DD-DDDDDC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/DD-DDDDDC.txt",
        "notes": "This should remove anything that matches any number with DD-DDDDDC"
    },
    {
        "title": "****DC",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/blocked_DC.txt",
        "notes": "This should remove anything that matches any blocked MRN number with last digits"
    },
    {
        "title": "model and serial numbers",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/model_and_serial.txt",
        "notes": "This should remove anything that matches a model or serial number pattern"
    },
    {
        "title": "ssn only",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/ssn.txt",
        "notes": "This should remove anything that matches XXX-XX-XXXX"
    },
    {
        "title": "ssn_phone_fax",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/ssn_phone_fax.txt",
        "notes": "This should remove anything that matches XXX-XX-XXXX, XXX-XXX-XXXX, XXX-XXXXXXXX, etc."
    },
    {
        "title": "emails",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/email.txt",
        "notes": "This should remove anything that looks like an email"
    },
    {
        "title": "ssn_phone_fax",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/mrn_id/ssn_phone_fax.txt",
        "notes": "This should remove anything that matches XXX-XX-XXXX, XXX-XXX-XXXX, XXX-XXXXXXXX, etc."
    },
    {
        "title": "blake phone regex",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/phone001.txt",
        "notes": "This should remove anything that matches a phone number"
    },
    {
        "title": "second phone regex",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/phone002.txt",
        "notes": "This should remove anything that xxx.xxx.xxxx"
    },
    {
        "title": "5 digit pager",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/contact/pager.txt",
        "notes": "This should remove anything that matches a pager number"
    },
    {
        "title": "full street address",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/full_street_address_transformed.txt",
        "notes": "This should remove anything that looks like a full street address (numbers and words)"
    },
    {
        "title": "city state zip",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_state_zip_transformed.txt",
        "notes": "This should remove anything that looks like a partial street address (city, state, zip"
    },
    {
        "title": "city zip",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_zip.txt",
        "notes": "This should remove anything that has a city name, followed by a zip code"
    },
    {
        "title": "number streetname extension?",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/num_streetname_extension?_transformed.txt",
        "notes": "This should remove anything that looks like a street address (with a possible extension)"
    },
    {
        "title": "lives in",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/lives_in.txt",
        "notes": "This should remove anything that matches pattern lives in/on"
    },
    {
        "title": "city state",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city_state_transformed.txt",
        "notes": "This should remove anything that has a city name, followed by a state name/abbrev"
    },
    {
        "title": "hospital",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/hospital_transformed.txt",
        "notes": "This should remove anything that has a hospital name"
    },
    {
        "title": "city",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/addresses/city.txt",
        "notes": "This should remove anything that matches pattern [name] [city]"
    },
    {
        "title": "Address Blacklist",
        "type": "set",
        "exclude": true,
        "filepath": "filters/blacklists/address_blacklist_cities_counties.json",
        "pos": [
            "NNP"
        ],
        "notes": ""
    },
    {
        "title": "[NNP] Hospital 26",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_obgyn_26chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 22",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_extended_care_22chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 20",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_emergency_department_20chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 18",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_community_hospital_18chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 17",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_memorial_hospital_17chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 16",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_gastroenterology_16chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 15",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_physician_group_15chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 14",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_medical_clinic_14chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 13",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_care_facility_13chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 12",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_microbiology_12chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 11",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_family_care_11chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 10",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_sanatorium_10chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 9",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_institute_9chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 8",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_hospital_8chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 7",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_surgery_7chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 6",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_clinic_6chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 5",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_rehab_5chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 4",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_care_4chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 3",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_lab_3chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "[NNP] Hospital 2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/nnp_ed_2chars.txt",
        "notes": "This should remove anything with 1-2 proper nouns followed by a hospital indicator"
    },
    {
        "title": "hospitalized at",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/hospitalized_at_15chars.txt",
        "notes": "This should remove anything with 'hospitalized at' followed by a proper noun"
    },
    {
        "title": "admission from",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admission_from_14chars.txt",
        "notes": "This should remove anything with 'admission from' followed by a proper noun"
    },
    {
        "title": "admitted from",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_from_hospital_13chars.txt",
        "notes": "This should remove anything with 'admitted from' followed by a proper noun"
    },
    {
        "title": "admission to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admission_to_hospital_12chars.txt",
        "notes": "This should remove anything with 'admission to' followed by a proper noun"
    },
    {
        "title": "admitted to 1",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_to_hospital_11chars.txt",
        "notes": "This should remove anything with 'admitted to' followed by a proper noun"
    },
    {
        "title": "brought to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/brought_to_hospital_10chars.txt",
        "notes": "This should remove anything with 'brought to' followed by a proper noun"
    },
    {
        "title": "taken to",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/taken_to_hospital_8chars.txt",
        "notes": "This should remove anything with 'taken to' followed by a proper noun"
    },
    {
        "title": "admitted to 2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/organizations/admitted_to_hospital_7chars.txt",
        "notes": "This should remove anything with 'admitted to' followed by a proper noun"
    },
    {
        "title": "salutations1",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_2chars.txt",
        "note": ""
    },
    {
        "title": "salutations2",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_3chars.txt",
        "note": ""
    },
    {
        "title": "salutations3",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_4chars.txt",
        "note": ""
    },
    {
        "title": "salutations4",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/pre_salutations_5chars.txt",
        "note": ""
    },
    {
        "title": "salutations5",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_2chars.txt",
        "note": ""
    },
    {
        "title": "salutations6",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_3chars.txt",
        "note": ""
    },
    {
        "title": "salutations7",
        "type": "regex",
        "exclude": true,
        "filepath": "filters/regex/salutations/post_salutations_4chars.txt",
        "note": ""
    },
    {
        "title": "Names Blacklist",
        "type": "set",
        "exclude": true,
        "filepath": "filters/blacklists/updated_blacklist.json",
        "pos": [
            "NNP",
            "NNS"
        ],
        "notes": "These are words we believe are not safe"
    },
    {
        "title": "Whitelist",
        "type": "set",
        "exclude": false,
        "filepath": "filters/whitelists/whitelist_addback_100.json",
        "pos": [],
        "notes": "These are words we beleive are safe"
    },
    {
        "title": "POS MATCHER",
        "type": "pos_matcher",
        "exclude": false,
        "pos": [
            "CD",
            "VBZ",
            "VBP",
            "VBN",
            "VBG",
            "VBD",
            "VB",
            "WRB",
            "WP",
            "WDT",
            "TO",
            "RP",
            "RB",
            "PRP$",
            "PRP",
            "NNS",
            "JJ",
            "NN"
        ],
        "notes": "This will include any CDs that aren't included in earlier steps"
    }
]