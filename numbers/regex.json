{
	"patterns":[
		{
			"id":1,
			"title":"All digits",
			"group":"all-digits",
			"regex":"patterns/alldigits.txt",
			"notes":"this should match all words with 1 or more digits in them by Blake Allen"
		},
		{
			"title":"Match nothing",
			"group":"filter_2",
			"regex":"patterns/nothing.txt",
			"notes":"This shouldn't match anything, useful for testing By Blake Allen"
		},
		{
			"id":2,
			"title":"Match nothing", 
			"group":"extract_2",
			"regex":"patterns/nothing.txt",
			"notes":"This shouldn't match anything, useful for testing By Blake Allen"
		},
		{
			"id":4,
			"title":"Medicine dosage matcher", 
			"group":"extract",
			"regex":"patterns/extract001.txt",
			"notes":"Matches 10Mg 180MG 10 MG ... By Blake Allen"
		},
		{
			"id":5,
			"title":"Vitamin B shortcode matcher", 
			"group":"extract",
			"regex":"patterns/extract002.txt",
			"notes":"Matches known vitamin short codes B1 B12 B6 etc. By Blake Allen"
		},
		{
			"id":6,
			"title":"Medicine Tablet matcher",
			"group":"extract",
			"regex":"patterns/extract003.txt",
			"notes":"Matches numbers that come before the word tablet(s)"
		},
		{
			"title":"Digits less than 4",
			"group":"extract",
			"regex":"patterns/extract004.txt",
			"notes":"Matches numbers where the length is less than 4 digits"

		},
		{
			"title":"#.###/##/####",
			"group":"extract",
			"regex":"patterns/extract005.txt",
			"notes":"Matches floating point numbers with extra slashes"

		},
		{
			"id":3,
			"title":"Floating Point Regex 001", 
			"group":"extract",
			"regex":"patterns/fp001.txt",
			"notes":"Matches 1.2, -1.2, +1.2 By Blake Allen"
		},
		{
			"id":7,
			"title":"Phone number regex 001",
			"group":"filter_2", 
			"regex":"patterns/phone001.txt",
			"notes":"This matches the following: 123-456-7890(123) 456-7890123 456 7890123.456.7890+91 (123) 456-7890 123456789 https://stackoverflow.com/a/16699507/1404663"
		},
		{
			"id":8,
			"title":"Date regex 001", 
			"group":"filter_2",
			"regex":"patterns/date001.txt",
			"notes":" Reg ex that matches all valid dates including leap years. Formats accepted mm/dd/yyyy or mm-dd-yyyy or mm.dd.yyyy https://stackoverflow.com/a/8768241/1404663"
		},
		{
			"id":9,
			"title":"date regex 002",
			"group":"filter_2",
			"regex":"patterns/date002.txt",
			"notes":"this should match gregorian calendar dates such as xxxx-xx-xx, where separators '-' can be any character (.) by Blake Allen"
		},
		{
			"id":10,
			"title":"General Date regex",
			"group":"filter",
			"regex":"patterns/date003.txt",
			"notes":"Matches XXXX-XX-XX XXXX/XX/XX XX/XX/XXXX where any character is allowed for separator"
		},
		{
			"title":"age catch",
			"group":"filter",
			"regex":"patterns/age001.txt",
			"notes":"Matches age(d) with some digits before or after "
		},
		{
			"title":"months",
			"group":"filter",
			"regex":"patterns/month001.txt",
			"notes":"Matches anything with any gregorian month, with digits before or after TODO: 12 may 2027"
		},
		{
			"title":"document",
			"group":"filter",
			"regex":"patterns/document001.txt",
			"notes":"Matches document:5-4132381"
		},
		{
			"title":"address",
			"group":"filter",
			"regex":"patterns/addr001.txt",
			"notes":"NOTE: this one is SLOOOWWWW... Matches anything with lane, st, road etc and digits see: https://stackoverflow.com/a/43599988/1404663"
		},
		{
			"id":11,
			"title":"Day month",
			"group":"filter_2",
			"regex":"patterns/date004.txt",
			"notes":"Matches X/XX by Blake"
		},
		{
			"id":12,
			"title":"almost date",
			"group":"filter",
			"regex":"patterns/date005.txt",
			"notes":"matches X/XX "
		},
		{
			"id":13,
			"title":"1-4 digits no context",
			"group":"filter_2",
			"regex":"patterns/digit001.txt",
			"notes":"matches d{1,4}"
		},
		{
			"title":"Kinda timelike, D:01/22/74",
			"group":"filter",
			"regex":"patterns/time001.txt",
			"notes":"matches D:01/22/74 "
		},
		{
			"id":14,
			"title":"year | yo useful for finding words with year, or year old, case insentitve",
			"group":"filter",
			"regex":"patterns/age002.txt",
			"notes":"matches 78-year-old 78-YO 78yearOLD 78 year old"
		},
		{
			"id":14,
			"title":"year | useful for finding words with year, case insentitve",
			"group":"filter",
			"regex":"patterns/age003.txt",
			"notes":"matches 78-year"
		},
		{
			"id":15,
			"title":"X year, week, month, day old",
			"group":"filter_2",
			"regex":"patterns/date007.txt",
			"notes":"matches 20 year old accounting for the single space"
		},
		{
			"id":16,
			"title":"Specific customer number",
			"group":"filter_2",
			"regex":"patterns/mixed001.txt",
			"notes":"matches **###/####, 2 letters with numbers and a separator"
		},
		{
			"id":17,
			"title":"2 letter code followed by numbers",
			"group":"filter_2",
			"regex":"patterns/mixed002.txt",
			"notes":"matches **# 2 letters and N digits in that order"
		},
		{
			"id":18,
			"title":"Customer ident",
			"group":"filter_2",
			"regex":"patterns/mixed003.txt",
			"notes":"matches a string of 4 or more digits with 3 or more letters"
		}
		
	],
	"groups": {
			"filter":"known regex's to use to filter data",
			"extract":"known data types used to extract data"
		}
}

